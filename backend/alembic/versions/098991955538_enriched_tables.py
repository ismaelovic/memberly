"""enriched tables

Revision ID: 098991955538
Revises: e58ef6e69d30
Create Date: 2025-09-23 13:53:31.975174

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "098991955538"
down_revision: Union[str, None] = "e58ef6e69d30"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "member_auth",
        "role",
        existing_type=postgresql.ENUM(
            "SYSTEM_ADMIN", "TENANT_ADMIN", "STAFF", "MEMBER", name="role"
        ),
        nullable=False,
    )
    op.alter_column(
        "member_auth",
        "state",
        existing_type=postgresql.ENUM(
            "ACTIVE", "CANCELLED", "SUSPENDED", "PAUSED", name="memberstate"
        ),
        nullable=False,
    )
    op.add_column("member_profile", sa.Column("birthday", sa.Date(), nullable=True))
    op.add_column("member_profile", sa.Column("address", sa.String(), nullable=True))
    op.add_column("member_profile", sa.Column("zip_code", sa.String(), nullable=True))
    op.add_column(
        "member_profile", sa.Column("phone_number", sa.String(), nullable=True)
    )
    # Create the 'membergender' enum type
    membergender_enum = postgresql.ENUM(
        "MALE", "FEMALE", "OTHER", name="membergender"
    )
    membergender_enum.create(op.get_bind())

    # Add the 'gender' column using the newly created enum type
    op.add_column(
        "member_profile",
        sa.Column(
            "gender",
            sa.Enum("MALE", "FEMALE", "OTHER", name="membergender"),
            nullable=True,
        ),
    )
    op.add_column(
        "subscription_plans", sa.Column("is_popular", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "subscription_plans",
        sa.Column("features", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("subscription_plans", "features")
    op.drop_column("subscription_plans", "is_popular")
    op.drop_column("member_profile", "gender")
    op.drop_column("member_profile", "phone_number")
    op.drop_column("member_profile", "zip_code")
    op.drop_column("member_profile", "address")
    op.drop_column("member_profile", "birthday")
    op.alter_column(
        "member_auth",
        "state",
        existing_type=postgresql.ENUM(
            "ACTIVE", "CANCELLED", "SUSPENDED", "PAUSED", name="memberstate"
        ),
        nullable=True,
    )
    op.alter_column(
        "member_auth",
        "role",
        existing_type=postgresql.ENUM(
            "SYSTEM_ADMIN", "TENANT_ADMIN", "STAFF", "MEMBER", name="role"
        ),
        nullable=True,
    )
    # ### end Alembic commands ###
